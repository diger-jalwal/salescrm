- name: Check if Java has already been downloaded and unpacked
  stat:
    path: '{{ java_jdk_dir }}'
  register: dir

- name: Download Java JDK
  get_url:
    url: "{{ java_download_url }}"
    dest: /tmp/{{ java_archive_name }}
  when: not dir.stat.exists
  become: yes
  tags:
    - java_install

- name: Create Java directory
  file:
    name: "{{ java_root_dir }}"
    state: directory
  when: not dir.stat.exists
  become: yes
  tags:
    - java_install

# Untar the downloaded Java archive. The owner and group must be set otherwise the folder
# # structure is created using numerical values for these.
- name: Unpack Java JDK
  unarchive:
    src: /tmp/{{ java_archive_name }}
    dest: "{{ java_root_dir }}"
    owner: "{{ mule_user }}"
    group: "{{ mule_user }}"
    remote_src: yes     
  when: not dir.stat.exists
  become: yes
  tags:
    - java_install

# Use the alternatives command to install the appropriate links to the executables in the PATH.
# Alternatives allows multiple versions of Java to be installed with the correct executable
# on the PATH being used.
- name: Install Java alternatives
  alternatives:
    name: java
    link: /usr/bin/java
    path: '{{ java_jdk_dir }}/bin/java'
  become: yes
  tags:
    - java_install_alternatives

# Cleanup install by deleting downloaded Java archive
- name: Delete Java JDK tar.gz file
  file:
    path: '/tmp/{{ java_archive_name }}'
    state: absent
  become: yes
  tags:
    - java_cleanupi

# Install unzip tool for unzip the file
- name: Install unzip tool for unzip the file
  yum:
    name: unzip
    state: latest

# Copy the trial version of 4.3.0 from local machine to remote machine
- name: Copy file with owner and permissions
  copy:
    src: /tmp/mule-ee-distribution-standalone-4.3.0.zip
    dest: /tmp
    owner: "{{ mule_user }}"
    group: "{{ mule_user }}"
    mode: '0644'

# Unarchive the file
- name: Unarchive Mule EE on the remote machine
  unarchive:
    src: /tmp/mule-ee-distribution-standalone-4.3.0.zip
    dest: /opt/
    owner: "{{ mule_user }}"
    group: "{{ mule_user }}"
    remote_src: yes
  become: yes

# Delete the Mule zip file from tmp forlder 
- name: Delete Java Mule zip file
  file:
    path: /tmp/{{ mule_zip_file }}
    state: absent
  become: yes
  tags:
    - mule_cleanup

# Set home path
- name: Home path for mulesoft
  shell: 'export MULE_HOME=~{{ mule_inst_dir }}'

# Add MULE HOME path to profile file.
- name: Add MULE HOME path to profile file.
  lineinfile:
    path: '/home/{{ mule_user }}/.bash_profile'
    line: 'export MULE_HOME=~{{ mule_inst_dir }}'
  become: yes

# Configure Linux/unix Daemon
#- name: Mulesoft as a linux/unix Daemon
#  shell: "{{ mule_soft_dir }} {{ mule_daemon }}"

# Start Mule soft using daemon
- name: Mule start
  shell: "{{ mule_soft_dir }} {{ mule_start }}"



